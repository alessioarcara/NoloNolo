{"version":3,"sources":["components/UI/StepProgressBar/StepProgressBar.module.css","components/UI/StepProgressBar/Step.module.css","components/NewAdvertisement/NewAdvertisementFooter/NewAdvertisementFooter.module.css","components/UI/StepProgressBar/Step.js","components/UI/StepProgressBar/StepProgressBar.js","components/NewAdvertisement/NewAdvertisementFooter/NewAdvertisementFooter.js","components/UI/Map/BoatMapPosition.js","components/NewAdvertisement/NewBoatLocation.module.css","hooks/use-geocode.js","components/NewAdvertisement/NewBoatLocation.js","components/UI/Button/Button.js","components/UI/Button/Button.module.css","components/UI/Input/Input.module.css","components/UI/ActionButtons/ActionButtons.js","components/UI/ActionButtons/ActionButton.module.css","components/UI/Spacer/Spacer.js","hooks/use-form.js","components/UI/Input/NumberSpinner.module.css","components/UI/Input/TextArea.module.css","components/UI/Layout/SplitScreenLayout/SplitScreenLayout.js","components/UI/Layout/SplitScreenLayout/SplitScreenLayout.module.css","helpers/InputValidationRules.js","components/UI/Input/NumberSpinner.js","components/UI/Input/Input.js","components/UI/Input/TextArea.js","helpers/inputConfig.js","helpers/formConfig.js"],"names":["module","exports","Step","name","fullfilled","className","classes","step","stepFullfilled","StepProgressBar","steps","stepPosition","length","console","warn","progressBar","map","i","NewAdvertisementFooter","isDisabledNextStep","navigate","useNavigate","ActionButtons","firstButtonText","secondButtonText","firstButtonClickHandler","firstButtonClassName","secondButtonClassName","secondButtonDisabled","secondButtonType","BoatMapPosition","boatPosition","maptilerProvider","maptiler","breakpointCtx","useContext","BreakpointContext","provider","dprs","defaultCenter","defaultZoom","mouseEvents","touchEvents","minZoom","center","breakpoint","width","color","anchor","UseGeocode","region","city","initialCoordinates","lat","lon","delay","coordinatesRef","useRef","useState","isLoading","setIsLoading","error","setError","fromAddress","debounce","a","axios","get","NOMINATIM_BASE_URL","response","data","current","parseFloat","useEffect","coordinates","NewBoatLocation","onMutationUserBoat","boat","breakpointContext","useForm","isDocked","boatLocationForm","harbour","formValues","renderFormInputs","isFormValid","undefined","useGeocode","formIsValid","SplitScreenLayout","layoutClassName","layout","leftLayoutClassName","leftLayout","rightLayoutClassName","rightLayout","contentLeft","title","contentRight","inputs","onSubmit","evt","preventDefault","body_insertBoatLocation","boatId","_id","latitude","longitude","prevBoats","newBoat","userBoat","Spacer","heightVh","Button","props","type","onClick","disabled","children","actionClassName","firstButtonDisabled","secondButtonClickHandler","actions","widthRatio","style","height","formObj","form","setForm","isInputFieldValid","useCallback","inputField","validationRules","rule","validate","value","errorMessage","message","onInputChange","event","target","inputObj","isValidInput","valid","onInputBlur","touched","isValid","arr","Object","values","changeForm","newFormObj","resetForm","classNames","label","render","rightLayoutContentClassName","rightLayoutActionsClassName","createValidationRule","ruleName","validateFunc","requiredRule","inputName","inputValue","minLengthRule","minCharacters","isNumberRule","isNaN","parseInt","NumberSpinner","handleChange","valueChange","handleBlur","isTouched","hasErrors","inputClasses","invalid","handleIncrease","handleDecrease","control","htmlFor","numberSpinnerClasses","numberSpinner","bind","onChange","onBlur","React","memo","Input","id","TextArea","renderNumberSpinner","key","this","renderInput","createFormFieldConfig","defaultValue","extension","call","arguments","authForm","email","includes","password","addressForm","street","postalCode","maxCharacters","maxLengthRule","newPasswordForm","oldPassword","confirmPassword","boatForm","yard","model","maximumCapacity","boatAdvertisementForm","description","dailyFee","fixedFee"],"mappings":"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","file":"static/js/13.19a81eb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBar\":\"StepProgressBar_progressBar__2iV9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"Step_step__35QnU\",\"stepFullfilled\":\"Step_stepFullfilled__3uqEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newAdvertisement-footer\":\"NewAdvertisementFooter_newAdvertisement-footer__NeFb-\",\"newAdvertisement-actionFirst\":\"NewAdvertisementFooter_newAdvertisement-actionFirst__YIW2M\"};","import React from \"react\";\n\nimport classes from \"./Step.module.css\"\n\nconst Step = ({name, fullfilled}) => {\n    return (\n        <div className={`${classes.step} ${fullfilled ? classes.stepFullfilled : ''}`}>\n            <div/>\n            <p>{name}</p>\n        </div>\n    );\n}\n\nexport default Step;\n","import React from \"react\";\n\nimport classes from \"./StepProgressBar.module.css\"\nimport Step from \"./Step\";\n\nconst StepProgressBar = ({steps, stepPosition}) => {\n    if (stepPosition > steps.length) {\n        console.warn(\"When specifying a stepPosition prop, the number must be less or equal the length of the steps array.\")\n        return null\n    }\n\n    return (\n        <div className={classes.progressBar}>\n            {steps.map((name, i) =>\n                i < stepPosition ? <Step key={i} name={name} fullfilled/> : <Step key={i} name={name}/>\n            )}\n        </div>\n    )\n}\n\nexport default StepProgressBar;\n","import React from \"react\";\nimport StepProgressBar from \"../../UI/StepProgressBar/StepProgressBar\";\nimport ActionButtons from \"../../UI/ActionButtons/ActionButtons\";\nimport {useNavigate} from \"react-router-dom\";\n\nimport classes from \"./NewAdvertisementFooter.module.css\"\n\nconst steps = [\"Barca\", \"Posizione\", \"Annuncio\"]\n\nconst NewAdvertisementFooter = ({isDisabledNextStep, stepPosition}) => {\n    const navigate = useNavigate();\n\n    const goBackHandler = () => {\n        navigate(-1)\n    }\n\n    return (\n        <div className={classes[\"newAdvertisement-footer\"]}>\n            <StepProgressBar steps={steps} stepPosition={stepPosition}/>\n            <ActionButtons\n                firstButtonText=\"Indietro\"\n                secondButtonText=\"Avanti\"\n                firstButtonClickHandler={goBackHandler}\n                firstButtonClassName={`${classes[\"newAdvertisement-actionFirst\"]} btn btn-secondary`}\n                secondButtonClassName={`${classes[\"newAdvertisement-actionSecond\"]} btn btn-outline-primary`}\n                secondButtonDisabled={isDisabledNextStep}\n                secondButtonType=\"submit\"\n            />\n        </div>\n    );\n};\n\nexport default NewAdvertisementFooter;\n","import React, {useContext} from \"react\";\nimport {Map, Marker, ZoomControl} from \"pigeon-maps\"\nimport { maptiler } from 'pigeon-maps/providers'\nimport BreakpointContext from \"../../../store/breakpoint-context\";\n\nconst BoatMapPosition = ({boatPosition}) => {\n    const maptilerProvider = maptiler('DcfLwyTnMIbhKLG6aqVn', 'streets')\n    const breakpointCtx = useContext(BreakpointContext)\n\n    return (\n        <Map\n            provider={maptilerProvider}\n            dprs={[1, 2]}\n            defaultCenter={[42.384, 12.613]}\n            defaultZoom={6}\n            mouseEvents={false}\n            touchEvents={false}\n            minZoom={6}\n            center={boatPosition}\n        >\n            {breakpointCtx.breakpoint === \"desktop\" && <ZoomControl/>}\n            <Marker\n                width={50}\n                color=\"black\"\n                anchor={boatPosition}\n            />\n        </Map>\n    )\n}\n\nexport default BoatMapPosition;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"NewBoatLocation_title__1nrCJ\",\"inputs\":\"NewBoatLocation_inputs__1cTmy\",\"layout\":\"NewBoatLocation_layout__6ZIKY\",\"leftLayout\":\"NewBoatLocation_leftLayout__1m_ya\",\"rightLayout\":\"NewBoatLocation_rightLayout__XW5dr\"};","import {useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {NOMINATIM_BASE_URL} from \"../helpers/Utils/constants\";\nimport {debounce} from \"../helpers/Utils/utils\";\n\nconst UseGeocode = (region, city, initialCoordinates = {lat: null, lon: null}, delay = 1000) => {\n    const coordinatesRef = useRef(initialCoordinates)\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const fromAddress = useRef(debounce(async (city, region) => {\n        try {\n            setIsLoading(true)\n            const response = await axios.get(`${NOMINATIM_BASE_URL}city=${city}&state=${region}&country=Italy`)\n            const data = await response.data[0]\n\n            if (data.lat !== null && data.lon !== null)\n                coordinatesRef.current = {lat: parseFloat(data.lat), lon: parseFloat(data.lon)}\n        }\n        catch (err) { setError(err) }\n        finally { setIsLoading(false) }\n    }, delay))\n\n    useEffect(() => {\n        if (region.length >= 4 && city.length >= 4) {\n            fromAddress.current(city, region)\n        }\n    }, [region, city])\n\n    return {coordinates: coordinatesRef.current, isLoading, error};\n};\n\nexport default UseGeocode;\n","import SplitScreenLayout from \"../UI/Layout/SplitScreenLayout/SplitScreenLayout\";\nimport NewAdvertisementFooter from \"./NewAdvertisementFooter/NewAdvertisementFooter\";\nimport BoatMapPosition from \"../UI/Map/BoatMapPosition\";\n\nimport classes from \"./NewBoatLocation.module.css\"\nimport useForm from \"../../hooks/use-form\";\nimport {boatLocationForm} from \"../../helpers/formConfig\";\nimport {body_insertBoatLocation} from \"../../helpers/httpConfig\";\nimport useGeocode from \"../../hooks/use-geocode\";\nimport Spacer from \"../UI/Spacer/Spacer\";\nimport {useContext} from \"react\";\nimport breakpointContext from \"../../store/breakpoint-context\";\n\nconst NewBoatLocation = ({onMutationUserBoat, boat}) => {\n    const {breakpoint} = useContext(breakpointContext)\n    const {formValues, renderFormInputs, isFormValid} = useForm(boat && boat.isDocked ?\n        boatLocationForm(boat.isDocked.harbour, boat.isDocked.city, boat.isDocked.region) : boatLocationForm()\n    )\n\n    const initialCoordinates = (boat && boat.isDocked) ?\n        {lat: boat.isDocked.coordinates[1], lon: boat.isDocked.coordinates[0]} : undefined\n    const {coordinates} = useGeocode(formValues[2], formValues[1], initialCoordinates)\n\n    const handleInsertBoatLocation = evt => {\n        evt.preventDefault()\n        onMutationUserBoat(\n            body_insertBoatLocation({\n                boatId: boat._id,\n                harbour: formValues[0],\n                city: formValues[1],\n                region: formValues[2],\n                latitude: coordinates.lat,\n                longitude: coordinates.lon\n            }),\n            (prevBoats, newBoat) => prevBoats.map(userBoat => userBoat._id === newBoat._id ? newBoat : userBoat),\n            newBoat => `${newBoat._id}/advertisement`\n        )\n    }\n\n    const formIsValid = isFormValid() && coordinates.lat && coordinates.lon\n\n    return (\n            <SplitScreenLayout\n                layoutClassName={classes.layout}\n                leftLayoutClassName={classes.leftLayout}\n                rightLayoutClassName={classes.rightLayout}\n                contentLeft={\n                    <>\n                        <h1 className={classes.title}> Dove si trova la tua barca?</h1>\n                        <BoatMapPosition boatPosition={[coordinates.lat, coordinates.lon]}/>\n                    </>\n                }\n                contentRight={\n                    <form className={classes.inputs} onSubmit={handleInsertBoatLocation}>\n                        {renderFormInputs()}\n                        {breakpoint === 'smartphone' && <Spacer heightVh={10}/>}\n                        <NewAdvertisementFooter isDisabledNextStep={!formIsValid} stepPosition={2}/>\n                    </form>\n                }\n            />\n    );\n};\n\nexport default NewBoatLocation;\n","import React from \"react\";\nimport classes from \"./Button.module.css\"\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\n\n\nconst Button = (props) => {\n    const {type, className, onClick, disabled, isLoading, children} = props;\n\n    return (\n        <button\n            type={type || 'submit'}\n            className={className || classes.Button}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {isLoading ? <LoadingSpinner/> : children}\n        </button>\n    )\n}\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Input_control__7JYPz\",\"invalid\":\"Input_invalid__1XscM\",\"error-text\":\"Input_error-text__8zxoK\"};","import React from \"react\";\nimport Button from \"../Button/Button\";\n\nimport classes from \"./ActionButton.module.css\"\n\nconst ActionButtons = props => {\n    const {\n        actionClassName,\n        firstButtonClassName,\n        firstButtonClickHandler,\n        firstButtonText,\n        firstButtonDisabled,\n        secondButtonClassName,\n        secondButtonClickHandler,\n        secondButtonText,\n        secondButtonDisabled,\n        secondButtonType\n    } = props\n    return (\n        <div className={actionClassName || classes.actions}>\n            <Button\n                className={firstButtonClassName || classes['btn-first']}\n                onClick={firstButtonClickHandler}\n                disabled={firstButtonDisabled}\n                type=\"button\"\n            >\n                {firstButtonText}\n            </Button>\n            <Button\n                className={`${secondButtonClassName} ${classes['btn-second']}`}\n                onClick={secondButtonClickHandler}\n                disabled={secondButtonDisabled}\n                type={secondButtonType || \"button\"}\n            >\n                {secondButtonText}\n            </Button>\n        </div>\n    )\n}\n\nexport default ActionButtons;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ActionButton_actions__27dZ-\",\"btn-first\":\"ActionButton_btn-first__v2NlO\",\"btn-second\":\"ActionButton_btn-second__1MDkF\"};","const Spacer = ({heightVh, widthRatio = 100}) => {\n    return (\n        <div style={{height: `${heightVh}vh`, width: `${widthRatio}%`}}/>\n    )\n}\n\nexport default Spacer;\n","import {useState, useCallback} from 'react';\n\nfunction useForm(formObj) {\n    const [form, setForm] = useState(formObj);\n\n    function renderFormInputs(classNames) {\n        return Object.values(form).map((inputObj) => {\n            const {value, label, errorMessage, valid, touched, render} = inputObj;\n            return render(onInputChange, onInputBlur, value, valid, touched, errorMessage, label, classNames)\n        });\n    }\n\n    const isInputFieldValid = useCallback(\n        (inputField) => {\n            for (const rule of inputField.validationRules) {\n                if (!rule.validate(inputField.value, form)) {\n                    inputField.errorMessage = rule.message;\n                    return false;\n                }\n            }\n            return true;\n        }, [form]);\n\n    const onInputChange = useCallback(event => {\n            const {name, value} = event.target;\n            // copy input object whose value was changed\n            const inputObj = {...form[name]};\n            // update value\n            inputObj.value = value;\n\n            // update input field's validity\n            const isValidInput = isInputFieldValid(inputObj);\n            // if input is valid and it was previously invalid\n            // set its valid status to true\n            if (isValidInput && !inputObj.valid) {\n                inputObj.valid = true;\n            } else if (!isValidInput && inputObj.valid) {\n                // if input is not valid and it was previously valid\n                // set its valid status to false\n                inputObj.valid = false;\n            }\n\n            setForm({...form, [name]: inputObj});\n        },\n        [form, isInputFieldValid]\n    );\n\n    const onInputBlur = useCallback(event => {\n        const {name} = event.target;\n        const inputObj = {...form[name]};\n\n        // mark input field as touched\n        inputObj.touched = true;\n\n        const isValidInput = isInputFieldValid(inputObj);\n\n        if (isValidInput && !inputObj.valid) {\n            inputObj.valid = true;\n        } else if (!isValidInput && inputObj.valid) {\n            inputObj.valid = false;\n        }\n\n        setForm({...form, [name]: inputObj});\n    }, [form, isInputFieldValid])\n\n    const isFormValid = useCallback(() => {\n        let isValid = true;\n        const arr = Object.values(form);\n\n        for (let i = 0; i < arr.length; i++) {\n            if (!arr[i].valid) {\n                isValid = false;\n                break;\n            }\n        }\n        return isValid;\n    }, [form]);\n\n    const changeForm = useCallback((newFormObj) => {\n        setForm(newFormObj)\n    }, [])\n\n    const resetForm = useCallback(() => {\n        setForm(formObj)\n    }, [formObj])\n\n    const formValues = Object.values(form).map(inputObj => inputObj.value)\n    return {formValues, renderFormInputs, isFormValid, changeForm, resetForm};\n}\n\nexport default useForm;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numberSpinner\":\"NumberSpinner_numberSpinner__2GLjj\",\"number-spinner-container\":\"NumberSpinner_number-spinner-container__3A2xi\",\"increase-btn\":\"NumberSpinner_increase-btn__1VhBa\",\"decrease-btn\":\"NumberSpinner_decrease-btn__dM4kV\",\"error-text\":\"NumberSpinner_error-text__5r1Z0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"TextArea_control__SvEtY\",\"invalid\":\"TextArea_invalid__2DFni\",\"error-text\":\"TextArea_error-text__2lPUJ\"};","import classes from \"./SplitScreenLayout.module.css\";\n\nconst SplitScreenLayout = ({contentLeft, contentRight, actions, layoutClassName, leftLayoutClassName,\n                               rightLayoutClassName, rightLayoutContentClassName, rightLayoutActionsClassName}) => {\n    return (\n        <section className={`${classes.layout} ${layoutClassName}`}>\n            <div className={`${classes[\"left-layout\"]} ${leftLayoutClassName}`}>\n                {contentLeft}\n            </div>\n            <div className={`${classes[\"right-layout\"]} ${rightLayoutClassName}`}>\n                <div className={`${classes[\"right-layout-content\"]} ${rightLayoutContentClassName}`}>\n                    {contentRight}\n                </div>\n                <div className={`${classes[\"right-layout-actions\"]} ${rightLayoutActionsClassName}`}>\n                    {actions}\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default SplitScreenLayout;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"SplitScreenLayout_layout__1eM0g\",\"left-layout\":\"SplitScreenLayout_left-layout__2dGvv\",\"right-layout\":\"SplitScreenLayout_right-layout__3Z0hS\",\"right-layout-actions\":\"SplitScreenLayout_right-layout-actions__Uu3y-\"};","function createValidationRule(ruleName, errorMessage, validateFunc) {\n    return {\n        name: ruleName,\n        message: errorMessage,\n        validate: validateFunc\n    };\n}\n\nexport function requiredRule(inputName) {\n    return createValidationRule(\n        \"required\",\n        `${inputName} required`,\n        (inputValue, formObj) => inputValue.length !== 0\n    );\n}\n\nexport function minLengthRule(inputName, minCharacters) {\n    return createValidationRule(\n        \"minLength\",\n        `${inputName} should contain atleast ${minCharacters} characters`,\n        (inputValue, formObj) => inputValue.length >= minCharacters\n    );\n}\n\nexport function maxLengthRule(inputName, maxCharacters) {\n    return createValidationRule(\n        \"maxLength\",\n        `${inputName} should contain atleast ${maxCharacters} characters`,\n        (inputValue, formObj) => inputValue.length <= maxCharacters\n    );\n}\n\nexport function isEmailRule(inputName) {\n    return createValidationRule(\n        \"isEmail\",\n        `Enter valid ${inputName}`,\n        (inputValue, formObj) => inputValue.includes('@')\n    );\n}\n\nexport function passwordMatchRule() {\n    return createValidationRule(\n        \"passwordMatch\",\n        `passwords do not match`,\n        (inputValue, formObj) => inputValue === formObj.password.value\n    );\n}\n\nexport function isNumberRule(inputName) {\n    return createValidationRule(\n        \"isNumber\",\n        `${inputName} should be a number`,\n        (inputValue, formObj) => !isNaN(parseInt(inputValue))\n    );\n}\n","import React, {useCallback} from \"react\";\nimport classes from \"./Input.module.css\"\nimport numberSpinnerClasses from \"./NumberSpinner.module.css\"\n\nconst NumberSpinner = (props) => {\n    const {\n        label,\n        type,\n        name,\n        handleChange,\n        valueChange,\n        handleBlur,\n        errorMessage,\n        isValid,\n        isTouched,\n        value,\n        classNames\n    } = props;\n\n    const hasErrors = isTouched && !isValid\n    const inputClasses = hasErrors ? `${classNames} ${classes.invalid}` : `${classNames}`\n\n    const handleIncrease = useCallback((value) => {\n        handleChange({\n            target: {\n                name,\n                value:\n                    isNaN(value) ? valueChange :\n                        value + valueChange > valueChange * 100 ? value :\n                            value + valueChange\n            }\n        })\n    }, [handleChange, name, valueChange])\n\n    const handleDecrease = useCallback((value) => {\n        handleChange({\n            target: {\n                name,\n                value:\n                    isNaN(value) ? 0 :\n                        value - valueChange < 0 ? 0 :\n                            value - valueChange\n            }\n        })\n    }, [handleChange, name, valueChange])\n\n\n    return (\n        <div className={`${classes.control} ${inputClasses}`}>\n            <label htmlFor={name}>{label}</label>\n            <div className={numberSpinnerClasses['number-spinner-container']}>\n                <div className={numberSpinnerClasses.numberSpinner}>\n                    <button type=\"button\"\n                            disabled={value <= 0}\n                            className={numberSpinnerClasses[\"decrease-btn\"]}\n                            onClick={handleDecrease.bind(this, parseInt(value))}>&#45;\n                    </button>\n                    <input type={type}\n                           name={name}\n                           value={value}\n                           onChange={handleChange}\n                           onBlur={handleBlur}/>\n                    <button type=\"button\"\n                            disabled={value >= valueChange * 100}\n                            className={numberSpinnerClasses[\"increase-btn\"]}\n                            onClick={handleIncrease.bind(this, parseInt(value))}>\n                        &#43;\n                    </button>\n                </div>\n                {hasErrors && (<span className={numberSpinnerClasses[\"error-text\"]}>{errorMessage}</span>)}\n            </div>\n            {/*{hasErrors && (<span className={classes[\"error-text\"]}>{errorMessage}</span>)}*/}\n        </div>\n    )\n}\n\nexport default React.memo(NumberSpinner)\n\n","import React from \"react\";\nimport classes from \"./Input.module.css\"\n\nconst Input = (props) => {\n    const {\n        id,\n        label,\n        type,\n        name,\n        handleChange,\n        handleBlur,\n        errorMessage,\n        isValid,\n        isTouched,\n        value,\n        classNames\n    } = props;\n\n    const hasErrors = isTouched && !isValid\n    const inputClasses = hasErrors ? `${classNames} ${classes.invalid}` : `${classNames}`\n\n    return (\n        <div className={`${inputClasses} ${classes.control}`}>\n            <label htmlFor={id || name}>{label}</label>\n            <input\n                id={id}\n                type={type}\n                name={name}\n                value={value}\n                onChange={handleChange}\n                onBlur={handleBlur}\n            />\n            {hasErrors && (<span className={classes[\"error-text\"]}>{errorMessage}</span>)}\n        </div>\n    )\n}\n\nexport default React.memo(Input)\n","import classes from \"./TextArea.module.css\";\n\nconst TextArea = (props) => {\n    const {\n        id,\n        label,\n        name,\n        handleChange,\n        handleBlur,\n        errorMessage,\n        isValid,\n        isTouched,\n        value,\n        classNames\n    } = props;\n\n    const hasErrors = isTouched && !isValid\n    const inputClasses = hasErrors ? `${classNames} ${classes.invalid}` : `${classNames}`\n\n    return (\n        <div className={`${inputClasses} ${classes.control}`}>\n            <label htmlFor={id || name}>{label}</label>\n            <textarea\n                id={id}\n                name={name}\n                value={value}\n                onChange={handleChange}\n                onBlur={handleBlur}\n            />\n            {hasErrors && (<span className={classes[\"error-text\"]}>{errorMessage}</span>)}\n        </div>\n    )\n}\n\nexport default TextArea;\n","import NumberSpinner from \"../components/UI/Input/NumberSpinner\";\nimport Input from \"../components/UI/Input/Input\";\nimport TextArea from \"../components/UI/Input/TextArea\";\n\nexport function renderNumberSpinner(handleChange, handleBlur, value, isValid, isTouched, error, key, classNames) {\n    return (\n        <NumberSpinner\n            key={key}\n            name={this.name}\n            type={this.type}\n            label={this.label}\n            isValid={isValid}\n            isTouched={isTouched}\n            value={value}\n            handleBlur={handleBlur}\n            handleChange={handleChange}\n            valueChange={this.valueChange}\n            errorMessage={error}\n            classNames={classNames}\n        />\n    )\n}\nexport function renderInput(handleChange, handleBlur, value, isValid, isTouched, error, key, classNames) {\n    return (\n        <Input\n            key={key}\n            name={this.name}\n            type={this.type}\n            label={this.label}\n            isValid={isValid}\n            isTouched={isTouched}\n            value={value}\n            handleBlur={handleBlur}\n            handleChange={handleChange}\n            errorMessage={error}\n            classNames={classNames}\n        />\n    )\n}\nexport function renderTextArea(handleChange, handleBlur, value, isValid, isTouched, error, key, classNames) {\n    return (\n        <TextArea\n            key={key}\n            name={this.name}\n            label={this.label}\n            isValid={isValid}\n            isTouched={isTouched}\n            value={value}\n            handleBlur={handleBlur}\n            handleChange={handleChange}\n            errorMessage={error}\n            classNames={classNames}\n        />\n    )\n}\n\n","import {\n    requiredRule,\n    minLengthRule,\n    isEmailRule,\n    isNumberRule,\n    passwordMatchRule,\n    maxLengthRule\n} from \"./InputValidationRules\"\nimport {renderInput, renderNumberSpinner, renderTextArea} from \"./inputConfig\";\n\nfunction createFormFieldConfig(label, name, type, defaultValue = '', extension = renderInput, valueChange = 1) {\n    return {\n        render: function render(handleChange, handleBlur, value, isValid, isTouched, error, key, classNames) {\n            return extension.call({label, name, type, valueChange}, ...arguments)\n        },\n        label,\n        value: defaultValue,\n        valid: !!defaultValue,\n        errorMessage: '',\n        touched: false,\n    };\n}\n\nexport const authForm = {\n    email: {\n        ...createFormFieldConfig('Email', 'email', 'email'),\n        validationRules: [\n            requiredRule(\"email\"),\n            isEmailRule(\"email\"),\n            minLengthRule(\"email\", 10)\n        ]\n    },\n    password: {\n        ...createFormFieldConfig('Password', 'password', 'password'),\n        validationRules: [\n            requiredRule(\"password\"),\n            minLengthRule(\"password\", 8),\n        ]\n    }\n};\nexport const addressForm = {\n    street: {\n        ...createFormFieldConfig('Via', 'street', 'text'),\n        validationRules: [\n            requiredRule(\"street\"),\n            minLengthRule(\"street\", 4)\n        ]\n    },\n    city: {\n        ...createFormFieldConfig('Città', 'city', 'text'),\n        validationRules: [\n            requiredRule(\"city\"),\n            minLengthRule(\"city\", 4)\n        ]\n    },\n    region: {\n        ...createFormFieldConfig('Regione', 'region', 'text'),\n        validationRules: [\n            requiredRule(\"region\"),\n            minLengthRule(\"region\", 4)\n        ]\n    },\n    postalCode: {\n        ...createFormFieldConfig('Codice postale', 'postalCode', 'number'),\n        validationRules: [\n            requiredRule(\"postal code\"),\n            minLengthRule(\"postal code\", 5),\n            maxLengthRule(\"postal code\", 5)\n        ]\n    }\n};\nexport const newPasswordForm = {\n    oldPassword: {\n        ...createFormFieldConfig('Password attuale', 'oldPassword', 'password'),\n        validationRules: [\n            requiredRule(\"old password\"),\n            minLengthRule(\"old password\", 8)\n        ]\n    },\n    password: {\n        ...createFormFieldConfig('Nuova password', 'password', 'password'),\n        validationRules: [\n            requiredRule(\"new password\"),\n            minLengthRule(\"new password\", 8)\n        ]\n    },\n    confirmPassword: {\n        ...createFormFieldConfig('Conferma la password', 'confirmPassword', 'password'),\n        validationRules: [\n            passwordMatchRule()\n        ]\n    }\n};\nexport const boatForm = (yard = '', model = '', length = 0, maximumCapacity = 0) => {\n    return {\n        yard: {\n            ...createFormFieldConfig('Cantiere', 'yard', 'text', yard),\n            validationRules: [\n                requiredRule(\"yard\")\n            ]\n        },\n        model: {\n            ...createFormFieldConfig('Modello', 'model', 'text', model),\n            validationRules: [\n                requiredRule(\"model\")\n            ]\n        },\n        length: {\n            ...createFormFieldConfig('Lunghezza', 'length', 'text', length, renderNumberSpinner),\n            validationRules: [\n                requiredRule(\"length\"),\n                isNumberRule(\"length\")\n            ]\n        },\n        maximumCapacity: {\n            ...createFormFieldConfig('Capacità massima', 'maximumCapacity', 'text', maximumCapacity, renderNumberSpinner),\n            validationRules: [\n                requiredRule(\"maximum capacity\"),\n                isNumberRule(\"maximum capacity\")\n            ]\n        },\n    };\n};\nexport const boatLocationForm = (harbour = '', city = '', region = '') => {\n    return {\n        harbour: {\n            ...createFormFieldConfig('Porto', 'harbour', 'text', harbour),\n            validationRules: [\n                requiredRule(\"harbour\"),\n                minLengthRule(\"harbour\", 4)\n            ]\n        },\n        city: {\n            ...createFormFieldConfig('Città', 'city', 'text', city),\n            validationRules: [\n                requiredRule(\"city\"),\n                minLengthRule(\"city\", 4)\n            ]\n        },\n        region: {\n            ...createFormFieldConfig('Regione', 'region', 'text', region),\n            validationRules: [\n                requiredRule(\"region\"),\n                minLengthRule(\"region\", 4)\n            ]\n        }\n    };\n};\nexport const boatAdvertisementForm = {\n    description: {\n        ...createFormFieldConfig('Descrizione', 'description', '', '', renderTextArea),\n        validationRules: [\n            requiredRule(\"description\"),\n            minLengthRule(\"description\", 10)\n        ]\n    },\n    dailyFee: {\n        ...createFormFieldConfig('Tariffa giornaliera', 'dailyFee', 'number', 0, renderNumberSpinner, 25),\n        validationRules: [\n            requiredRule(\"dailyFee\"),\n            isNumberRule(\"dailyFee\")\n        ]\n    },\n    fixedFee: {\n        ...createFormFieldConfig('Tariffa fissa', 'fixedFee', 'number', 0, renderNumberSpinner, 25),\n        validationRules: [\n            requiredRule(\"fixedFee\"),\n            isNumberRule(\"fixedFee\")\n        ]\n    },\n};\n"],"sourceRoot":""}