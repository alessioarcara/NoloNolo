{"version":3,"sources":["components/Auth/AuthForm.module.css","components/Auth/AuthForm.js","pages/AuthPage.js","components/UI/Button/Button.js","components/UI/Modal/Modal.js","components/UI/Button/Button.module.css","components/UI/Modal/Modal.module.css","components/UI/Input/Input.module.css","hooks/use-form.js","components/UI/Input/NumberSpinner.module.css","components/UI/Input/TextArea.module.css","helpers/InputValidationRules.js","components/UI/Input/NumberSpinner.js","components/UI/Input/Input.js","components/UI/Input/TextArea.js","helpers/inputConfig.js","helpers/formConfig.js"],"names":["module","exports","AuthForm","useState","isLogin","setIsLogin","useHttp","error","status","payload","data","authenticate","sendRequest","useForm","authForm","formValues","renderFormInputs","isFormValid","resetForm","authCtx","useContext","AuthContext","switchAuthModeHandler","useCallback","prevState","useEffect","authData","login","token","authProblem","Modal","title","className","classes","auth","onSubmit","event","preventDefault","enteredEmail","enteredPassword","transformData","resData","Object","keys","body","body_login","body_signup","actions","Button","isLoading","disabled","type","toggle","onClick","React","memo","AuthPage","props","children","Backdrop","backdrop","onCancel","ModalOverlay","adapterSize","document","style","overflow","modal","isShown","setIsShown","showHandler","ReactDOM","createPortal","closeModalHandler","getElementById","formObj","form","setForm","isInputFieldValid","inputField","validationRules","rule","validate","value","errorMessage","message","onInputChange","target","name","inputObj","isValidInput","valid","onInputBlur","touched","isValid","arr","values","i","length","changeForm","newFormObj","map","classNames","label","render","createValidationRule","ruleName","validateFunc","requiredRule","inputName","inputValue","minLengthRule","minCharacters","isNumberRule","isNaN","parseInt","NumberSpinner","handleChange","valueChange","handleBlur","isTouched","hasErrors","inputClasses","invalid","handleIncrease","handleDecrease","control","htmlFor","numberSpinnerClasses","numberSpinner","bind","onChange","onBlur","Input","id","TextArea","renderNumberSpinner","key","this","renderInput","createFormFieldConfig","defaultValue","extension","call","arguments","email","includes","password","addressForm","street","city","region","postalCode","maxCharacters","maxLengthRule","newPasswordForm","oldPassword","confirmPassword","boatForm","yard","model","maximumCapacity","boatLocationForm","harbour","boatAdvertisementForm","description","dailyFee","fixedFee"],"mappings":"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","file":"static/js/17.23197f5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__MPw6W\",\"actions\":\"AuthForm_actions__1VNhY\",\"toggle\":\"AuthForm_toggle__21tnB\"};","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport Button from \"../UI/Button/Button\";\nimport classes from \"./AuthForm.module.css\"\nimport useForm from \"../../hooks/use-form\";\nimport useHttp from \"../../hooks/use-http\";\n\nimport {body_login, body_signup} from '../../helpers/httpConfig'\nimport {authForm} from \"../../helpers/formConfig\";\nimport AuthContext from \"../../store/auth-context\";\nimport Modal from \"../UI/Modal/Modal\";\n\n\nconst AuthForm = () => {\n    const [isLogin, setIsLogin] = useState(true)\n    const {error, status, data: payload, sendRequest: authenticate} = useHttp()\n    const {formValues, renderFormInputs, isFormValid, resetForm} = useForm(authForm)\n\n    const authCtx = useContext(AuthContext)\n\n    const switchAuthModeHandler = useCallback(() => {\n        setIsLogin(prevState => !prevState);\n    }, []);\n\n    const submitHandler = event => {\n        event.preventDefault();\n\n        const enteredEmail = formValues[0]\n        const enteredPassword = formValues[1]\n\n        const transformData = resData => resData[Object.keys(resData)]\n\n        if (isLogin) {\n            authenticate({body: body_login({enteredEmail, enteredPassword})}, transformData)\n        } else {\n            authenticate({body: body_signup({enteredEmail, enteredPassword})}, transformData)\n        }\n        resetForm()\n    }\n\n    useEffect(() => {\n        if (payload?.authData)\n            authCtx.login(payload.authData.token)\n    }, [authCtx, payload])\n\n    return (\n        <>\n            {status === 'completed' && payload && payload.authProblem && <Modal title=\"Error\">{payload.authProblem}</Modal>}\n            {status === 'completed' && error && <Modal title=\"Error\">{error}</Modal>}\n            <section className={classes.auth}>\n                <h1>{isLogin ? \"Accedi\" : \"Registrati\"}</h1>\n                <form onSubmit={submitHandler}>\n                    {renderFormInputs()}\n                    <div className={classes.actions}>\n                        <Button isLoading={status === \"pending\"} disabled={!isFormValid()}>Continua</Button>\n                        <Button\n                            type=\"button\"\n                            className={classes.toggle}\n                            onClick={switchAuthModeHandler}>\n                            {isLogin ? \"Crea nuovo account\" : \"Entra con un account esistente\"}\n                        </Button>\n                    </div>\n                </form>\n            </section>\n        </>\n    )\n}\n\nexport default React.memo(AuthForm);\n","import AuthForm from \"../components/Auth/AuthForm\";\n\nconst AuthPage = () => {\n    return (\n        <AuthForm/>\n    );\n}\n\nexport default AuthPage\n","import React from \"react\";\nimport classes from \"./Button.module.css\"\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\n\n\nconst Button = (props) => {\n    const {type, className, onClick, disabled, isLoading, children} = props;\n\n    return (\n        <button\n            type={type || 'submit'}\n            className={className || classes.Button}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {isLoading ? <LoadingSpinner/> : children}\n        </button>\n    )\n}\n\nexport default React.memo(Button);\n","import React, {useState, useEffect} from \"react\";\nimport ReactDOM from \"react-dom\"\n\nimport classes from \"./Modal.module.css\"\n\nconst Backdrop = (props) => {\n    return <div className={classes.backdrop} onClick={props.onCancel} />;\n};\n\nconst ModalOverlay = ({title, children, actions, onCancel, adapterSize = \"desktop\"}) => {\n\n    useEffect(() => {\n        document.body.style.overflow = 'hidden'\n        return () => { document.body.style.overflow = 'unset' };\n    }, [])\n\n    if (adapterSize === \"smartphone\") {\n        return <div className={classes[\"modal-fullscreen\"]}>{children}</div>\n    }\n\n    return (\n        <div className={classes.modal}>\n            <header className={classes[\"modal-header\"]}>\n                <h1>{title}</h1>\n            </header>\n            <section className={classes[\"modal-content\"]}>{children}</section>\n            <footer>\n                {actions}\n                <span onClick={onCancel} className={classes[\"modal-close\"]}>&times;</span>\n            </footer>\n        </div>\n    );\n};\n\nconst Modal = (props) => {\n    const [isShown, setIsShown] = useState(true)\n\n    const showHandler = () => { setIsShown(false) }\n\n    if (!isShown) { return null }\n\n    return (\n        <>\n            {ReactDOM.createPortal(\n                <Backdrop onCancel={props.closeModalHandler || showHandler}/>,\n                document.getElementById('backdrop-root')\n            )}\n            {ReactDOM.createPortal(\n                <ModalOverlay\n                    title={props.title}\n                    children={props.children}\n                    adapterSize={props.adapterSize}\n                    onCancel={props.closeModalHandler || showHandler}\n                />,\n                document.getElementById('overlay-root')\n            )}\n        </>\n    )\n}\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3iXHD\",\"modal-fullscreen\":\"Modal_modal-fullscreen__12Zdf\",\"modal\":\"Modal_modal__30MRu\",\"slide-down\":\"Modal_slide-down__294fH\",\"modal-header\":\"Modal_modal-header__22ZUr\",\"modal-content\":\"Modal_modal-content__1hFZf\",\"modal-close\":\"Modal_modal-close__2Adva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Input_control__7JYPz\",\"invalid\":\"Input_invalid__1XscM\",\"error-text\":\"Input_error-text__8zxoK\"};","import {useState, useCallback} from 'react';\n\nfunction useForm(formObj) {\n    const [form, setForm] = useState(formObj);\n\n    function renderFormInputs(classNames) {\n        return Object.values(form).map((inputObj) => {\n            const {value, label, errorMessage, valid, touched, render} = inputObj;\n            return render(onInputChange, onInputBlur, value, valid, touched, errorMessage, label, classNames)\n        });\n    }\n\n    const isInputFieldValid = useCallback(\n        (inputField) => {\n            for (const rule of inputField.validationRules) {\n                if (!rule.validate(inputField.value, form)) {\n                    inputField.errorMessage = rule.message;\n                    return false;\n                }\n            }\n            return true;\n        }, [form]);\n\n    const onInputChange = useCallback(event => {\n            const {name, value} = event.target;\n            // copy input object whose value was changed\n            const inputObj = {...form[name]};\n            // update value\n            inputObj.value = value;\n\n            // update input field's validity\n            const isValidInput = isInputFieldValid(inputObj);\n            // if input is valid and it was previously invalid\n            // set its valid status to true\n            if (isValidInput && !inputObj.valid) {\n                inputObj.valid = true;\n            } else if (!isValidInput && inputObj.valid) {\n                // if input is not valid and it was previously valid\n                // set its valid status to false\n                inputObj.valid = false;\n            }\n\n            setForm({...form, [name]: inputObj});\n        },\n        [form, isInputFieldValid]\n    );\n\n    const onInputBlur = useCallback(event => {\n        const {name} = event.target;\n        const inputObj = {...form[name]};\n\n        // mark input field as touched\n        inputObj.touched = true;\n\n        const isValidInput = isInputFieldValid(inputObj);\n\n        if (isValidInput && !inputObj.valid) {\n            inputObj.valid = true;\n        } else if (!isValidInput && inputObj.valid) {\n            inputObj.valid = false;\n        }\n\n        setForm({...form, [name]: inputObj});\n    }, [form, isInputFieldValid])\n\n    const isFormValid = useCallback(() => {\n        let isValid = true;\n        const arr = Object.values(form);\n\n        for (let i = 0; i < arr.length; i++) {\n            if (!arr[i].valid) {\n                isValid = false;\n                break;\n            }\n        }\n        return isValid;\n    }, [form]);\n\n    const changeForm = useCallback((newFormObj) => {\n        setForm(newFormObj)\n    }, [])\n\n    const resetForm = useCallback(() => {\n        setForm(formObj)\n    }, [formObj])\n\n    const formValues = Object.values(form).map(inputObj => inputObj.value)\n    return {formValues, renderFormInputs, isFormValid, changeForm, resetForm};\n}\n\nexport default useForm;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numberSpinner\":\"NumberSpinner_numberSpinner__2GLjj\",\"number-spinner-container\":\"NumberSpinner_number-spinner-container__3A2xi\",\"increase-btn\":\"NumberSpinner_increase-btn__1VhBa\",\"decrease-btn\":\"NumberSpinner_decrease-btn__dM4kV\",\"error-text\":\"NumberSpinner_error-text__5r1Z0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"TextArea_control__SvEtY\",\"invalid\":\"TextArea_invalid__2DFni\",\"error-text\":\"TextArea_error-text__2lPUJ\"};","function createValidationRule(ruleName, errorMessage, validateFunc) {\n    return {\n        name: ruleName,\n        message: errorMessage,\n        validate: validateFunc\n    };\n}\n\nexport function requiredRule(inputName) {\n    return createValidationRule(\n        \"required\",\n        `${inputName} required`,\n        (inputValue, formObj) => inputValue.length !== 0\n    );\n}\n\nexport function minLengthRule(inputName, minCharacters) {\n    return createValidationRule(\n        \"minLength\",\n        `${inputName} should contain atleast ${minCharacters} characters`,\n        (inputValue, formObj) => inputValue.length >= minCharacters\n    );\n}\n\nexport function maxLengthRule(inputName, maxCharacters) {\n    return createValidationRule(\n        \"maxLength\",\n        `${inputName} should contain atleast ${maxCharacters} characters`,\n        (inputValue, formObj) => inputValue.length <= maxCharacters\n    );\n}\n\nexport function isEmailRule(inputName) {\n    return createValidationRule(\n        \"isEmail\",\n        `Enter valid ${inputName}`,\n        (inputValue, formObj) => inputValue.includes('@')\n    );\n}\n\nexport function passwordMatchRule() {\n    return createValidationRule(\n        \"passwordMatch\",\n        `passwords do not match`,\n        (inputValue, formObj) => inputValue === formObj.password.value\n    );\n}\n\nexport function isNumberRule(inputName) {\n    return createValidationRule(\n        \"isNumber\",\n        `${inputName} should be a number`,\n        (inputValue, formObj) => !isNaN(parseInt(inputValue))\n    );\n}\n","import React, {useCallback} from \"react\";\nimport classes from \"./Input.module.css\"\nimport numberSpinnerClasses from \"./NumberSpinner.module.css\"\n\nconst NumberSpinner = (props) => {\n    const {\n        label,\n        type,\n        name,\n        handleChange,\n        valueChange,\n        handleBlur,\n        errorMessage,\n        isValid,\n        isTouched,\n        value,\n        classNames\n    } = props;\n\n    const hasErrors = isTouched && !isValid\n    const inputClasses = hasErrors ? `${classNames} ${classes.invalid}` : `${classNames}`\n\n    const handleIncrease = useCallback((value) => {\n        handleChange({\n            target: {\n                name,\n                value:\n                    isNaN(value) ? valueChange :\n                        value + valueChange > valueChange * 100 ? value :\n                            value + valueChange\n            }\n        })\n    }, [handleChange, name, valueChange])\n\n    const handleDecrease = useCallback((value) => {\n        handleChange({\n            target: {\n                name,\n                value:\n                    isNaN(value) ? 0 :\n                        value - valueChange < 0 ? 0 :\n                            value - valueChange\n            }\n        })\n    }, [handleChange, name, valueChange])\n\n\n    return (\n        <div className={`${classes.control} ${inputClasses}`}>\n            <label htmlFor={name}>{label}</label>\n            <div className={numberSpinnerClasses['number-spinner-container']}>\n                <div className={numberSpinnerClasses.numberSpinner}>\n                    <button type=\"button\"\n                            disabled={value <= 0}\n                            className={numberSpinnerClasses[\"decrease-btn\"]}\n                            onClick={handleDecrease.bind(this, parseInt(value))}>&#45;\n                    </button>\n                    <input type={type}\n                           name={name}\n                           value={value}\n                           onChange={handleChange}\n                           onBlur={handleBlur}/>\n                    <button type=\"button\"\n                            disabled={value >= valueChange * 100}\n                            className={numberSpinnerClasses[\"increase-btn\"]}\n                            onClick={handleIncrease.bind(this, parseInt(value))}>\n                        &#43;\n                    </button>\n                </div>\n                {hasErrors && (<span className={numberSpinnerClasses[\"error-text\"]}>{errorMessage}</span>)}\n            </div>\n            {/*{hasErrors && (<span className={classes[\"error-text\"]}>{errorMessage}</span>)}*/}\n        </div>\n    )\n}\n\nexport default React.memo(NumberSpinner)\n\n","import React from \"react\";\nimport classes from \"./Input.module.css\"\n\nconst Input = (props) => {\n    const {\n        id,\n        label,\n        type,\n        name,\n        handleChange,\n        handleBlur,\n        errorMessage,\n        isValid,\n        isTouched,\n        value,\n        classNames\n    } = props;\n\n    const hasErrors = isTouched && !isValid\n    const inputClasses = hasErrors ? `${classNames} ${classes.invalid}` : `${classNames}`\n\n    return (\n        <div className={`${inputClasses} ${classes.control}`}>\n            <label htmlFor={id || name}>{label}</label>\n            <input\n                id={id}\n                type={type}\n                name={name}\n                value={value}\n                onChange={handleChange}\n                onBlur={handleBlur}\n            />\n            {hasErrors && (<span className={classes[\"error-text\"]}>{errorMessage}</span>)}\n        </div>\n    )\n}\n\nexport default React.memo(Input)\n","import classes from \"./TextArea.module.css\";\n\nconst TextArea = (props) => {\n    const {\n        id,\n        label,\n        name,\n        handleChange,\n        handleBlur,\n        errorMessage,\n        isValid,\n        isTouched,\n        value,\n        classNames\n    } = props;\n\n    const hasErrors = isTouched && !isValid\n    const inputClasses = hasErrors ? `${classNames} ${classes.invalid}` : `${classNames}`\n\n    return (\n        <div className={`${inputClasses} ${classes.control}`}>\n            <label htmlFor={id || name}>{label}</label>\n            <textarea\n                id={id}\n                name={name}\n                value={value}\n                onChange={handleChange}\n                onBlur={handleBlur}\n            />\n            {hasErrors && (<span className={classes[\"error-text\"]}>{errorMessage}</span>)}\n        </div>\n    )\n}\n\nexport default TextArea;\n","import NumberSpinner from \"../components/UI/Input/NumberSpinner\";\nimport Input from \"../components/UI/Input/Input\";\nimport TextArea from \"../components/UI/Input/TextArea\";\n\nexport function renderNumberSpinner(handleChange, handleBlur, value, isValid, isTouched, error, key, classNames) {\n    return (\n        <NumberSpinner\n            key={key}\n            name={this.name}\n            type={this.type}\n            label={this.label}\n            isValid={isValid}\n            isTouched={isTouched}\n            value={value}\n            handleBlur={handleBlur}\n            handleChange={handleChange}\n            valueChange={this.valueChange}\n            errorMessage={error}\n            classNames={classNames}\n        />\n    )\n}\nexport function renderInput(handleChange, handleBlur, value, isValid, isTouched, error, key, classNames) {\n    return (\n        <Input\n            key={key}\n            name={this.name}\n            type={this.type}\n            label={this.label}\n            isValid={isValid}\n            isTouched={isTouched}\n            value={value}\n            handleBlur={handleBlur}\n            handleChange={handleChange}\n            errorMessage={error}\n            classNames={classNames}\n        />\n    )\n}\nexport function renderTextArea(handleChange, handleBlur, value, isValid, isTouched, error, key, classNames) {\n    return (\n        <TextArea\n            key={key}\n            name={this.name}\n            label={this.label}\n            isValid={isValid}\n            isTouched={isTouched}\n            value={value}\n            handleBlur={handleBlur}\n            handleChange={handleChange}\n            errorMessage={error}\n            classNames={classNames}\n        />\n    )\n}\n\n","import {\n    requiredRule,\n    minLengthRule,\n    isEmailRule,\n    isNumberRule,\n    passwordMatchRule,\n    maxLengthRule\n} from \"./InputValidationRules\"\nimport {renderInput, renderNumberSpinner, renderTextArea} from \"./inputConfig\";\n\nfunction createFormFieldConfig(label, name, type, defaultValue = '', extension = renderInput, valueChange = 1) {\n    return {\n        render: function render(handleChange, handleBlur, value, isValid, isTouched, error, key, classNames) {\n            return extension.call({label, name, type, valueChange}, ...arguments)\n        },\n        label,\n        value: defaultValue,\n        valid: !!defaultValue,\n        errorMessage: '',\n        touched: false,\n    };\n}\n\nexport const authForm = {\n    email: {\n        ...createFormFieldConfig('Email', 'email', 'email'),\n        validationRules: [\n            requiredRule(\"email\"),\n            isEmailRule(\"email\"),\n            minLengthRule(\"email\", 10)\n        ]\n    },\n    password: {\n        ...createFormFieldConfig('Password', 'password', 'password'),\n        validationRules: [\n            requiredRule(\"password\"),\n            minLengthRule(\"password\", 8),\n        ]\n    }\n};\nexport const addressForm = {\n    street: {\n        ...createFormFieldConfig('Via', 'street', 'text'),\n        validationRules: [\n            requiredRule(\"street\"),\n            minLengthRule(\"street\", 4)\n        ]\n    },\n    city: {\n        ...createFormFieldConfig('Città', 'city', 'text'),\n        validationRules: [\n            requiredRule(\"city\"),\n            minLengthRule(\"city\", 4)\n        ]\n    },\n    region: {\n        ...createFormFieldConfig('Regione', 'region', 'text'),\n        validationRules: [\n            requiredRule(\"region\"),\n            minLengthRule(\"region\", 4)\n        ]\n    },\n    postalCode: {\n        ...createFormFieldConfig('Codice postale', 'postalCode', 'number'),\n        validationRules: [\n            requiredRule(\"postal code\"),\n            minLengthRule(\"postal code\", 5),\n            maxLengthRule(\"postal code\", 5)\n        ]\n    }\n};\nexport const newPasswordForm = {\n    oldPassword: {\n        ...createFormFieldConfig('Password attuale', 'oldPassword', 'password'),\n        validationRules: [\n            requiredRule(\"old password\"),\n            minLengthRule(\"old password\", 8)\n        ]\n    },\n    password: {\n        ...createFormFieldConfig('Nuova password', 'password', 'password'),\n        validationRules: [\n            requiredRule(\"new password\"),\n            minLengthRule(\"new password\", 8)\n        ]\n    },\n    confirmPassword: {\n        ...createFormFieldConfig('Conferma la password', 'confirmPassword', 'password'),\n        validationRules: [\n            passwordMatchRule()\n        ]\n    }\n};\nexport const boatForm = (yard = '', model = '', length = 0, maximumCapacity = 0) => {\n    return {\n        yard: {\n            ...createFormFieldConfig('Cantiere', 'yard', 'text', yard),\n            validationRules: [\n                requiredRule(\"yard\")\n            ]\n        },\n        model: {\n            ...createFormFieldConfig('Modello', 'model', 'text', model),\n            validationRules: [\n                requiredRule(\"model\")\n            ]\n        },\n        length: {\n            ...createFormFieldConfig('Lunghezza', 'length', 'text', length, renderNumberSpinner),\n            validationRules: [\n                requiredRule(\"length\"),\n                isNumberRule(\"length\")\n            ]\n        },\n        maximumCapacity: {\n            ...createFormFieldConfig('Capacità massima', 'maximumCapacity', 'text', maximumCapacity, renderNumberSpinner),\n            validationRules: [\n                requiredRule(\"maximum capacity\"),\n                isNumberRule(\"maximum capacity\")\n            ]\n        },\n    };\n};\nexport const boatLocationForm = (harbour = '', city = '', region = '') => {\n    return {\n        harbour: {\n            ...createFormFieldConfig('Porto', 'harbour', 'text', harbour),\n            validationRules: [\n                requiredRule(\"harbour\"),\n                minLengthRule(\"harbour\", 4)\n            ]\n        },\n        city: {\n            ...createFormFieldConfig('Città', 'city', 'text', city),\n            validationRules: [\n                requiredRule(\"city\"),\n                minLengthRule(\"city\", 4)\n            ]\n        },\n        region: {\n            ...createFormFieldConfig('Regione', 'region', 'text', region),\n            validationRules: [\n                requiredRule(\"region\"),\n                minLengthRule(\"region\", 4)\n            ]\n        }\n    };\n};\nexport const boatAdvertisementForm = {\n    description: {\n        ...createFormFieldConfig('Descrizione', 'description', '', '', renderTextArea),\n        validationRules: [\n            requiredRule(\"description\"),\n            minLengthRule(\"description\", 10)\n        ]\n    },\n    dailyFee: {\n        ...createFormFieldConfig('Tariffa giornaliera', 'dailyFee', 'number', 0, renderNumberSpinner, 25),\n        validationRules: [\n            requiredRule(\"dailyFee\"),\n            isNumberRule(\"dailyFee\")\n        ]\n    },\n    fixedFee: {\n        ...createFormFieldConfig('Tariffa fissa', 'fixedFee', 'number', 0, renderNumberSpinner, 25),\n        validationRules: [\n            requiredRule(\"fixedFee\"),\n            isNumberRule(\"fixedFee\")\n        ]\n    },\n};\n"],"sourceRoot":""}