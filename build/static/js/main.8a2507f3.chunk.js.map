{"version":3,"sources":["components/UI/Navigation/NavigationBar.module.css","hooks-store/favorites-store.js","store/auth-context.js","helpers/httpConfig.js","middleware/axiosConfig.js","hooks-store/store.js","components/UI/Fallback/Fallback.js","components/UI/LoadingSpinner/LoadingSpinner.module.css","components/UI/Footer/Footer.module.css","helpers/Utils/constants.js","hooks/use-http.js","components/UI/LoadingSpinner/LoadingSpinner.js","store/breakpoint-context.js","components/UI/icons/MenuIcons/HeartIcon.js","components/UI/icons/MenuIcons/SearchIcon.js","components/UI/icons/PencilIcon.js","hooks/use-intersection-observer.js","components/UI/Fallback/Fallback.module.css","components/RequireAuth/RequireAuth.js","components/UI/icons/MenuIcons/UserIcon.js","components/UI/Navigation/NavigationBar.js","components/UI/Footer/Footer.js","components/UI/Layout/NavigationLayout/NavigationLayout.js","App.js","middleware/axiosMiddleware.js","index.js"],"names":["module","exports","configureStore","fetchedFavorites","initStore","TOGGLE_FAV","curState","favoriteAdv","userFavorites","some","userFavAdv","_id","filter","concat","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","useState","setToken","sendRequest","useHttp","userIsLoggedIn","getUserFavoritesHandler","useCallback","body","body_favorites","resData","favoritesConfigureStore","favorites","map","favorite","advIsFavorite","loginHandler","logoutHandler","invalidate","useEffect","body_refresh","authData","refreshToken","contextValue","Provider","value","children","body_login","query","variables","userData","email","enteredEmail","password","enteredPassword","body_signup","body_changePassword","passwordData","oldPassword","newPassword","body_updateUser","street","city","region","postalCode","body_search","contains","body_advertisements","from","to","minCapacity","boatTypes","minPrice","maxPrice","skip","take","body_advertisement","boatId","body_addBoat","boatData","yard","model","length","maximumCapacity","boatType","body_removeBoat","body_insertBoatLocation","locationData","isDocked","harbour","latitude","longitude","body_publishAdvertisement","advertisementData","publishAdvertisement","description","dailyFee","fixedFee","body_rentBoat","rentalData","body_updateRental","rentalId","body_backdateRental","body_recordBoatReturn","body_boatRentals","body_deleteRental","body_publishReview","reviewData","rating","body_shipownerAdvertisements","body_withdrawAdvertisement","body_addFavorite","body_removeFavorite","body_user","body_deleteUser","body_userBoats","body_rentals","body_userRentals","body_addAvatar","operations","body_addBoatImages","http","axios","create","method","withCredentials","baseURL","GRAPHQL_API_URL","globalState","listeners","actions","useStore","shouldListen","setState","dispatch","actionIdentifier","payload","newState","listener","push","li","userActions","initialState","Fallback","className","classes","fallback","memo","IMAGE_PATH","NOMINATIM_BASE_URL","DEFAULT_BOAT_IMAGE","DEFAULT_AVATAR","MANAGE_BOATS","ADD_GUEST","REMOVE_GUEST","INITIAL_PRICE","MANAGE_MIN_PRICE","MANAGE_MAX_PRICE","CLEAR_FORM","NUMBER_BOAT_TYPES","SWITCH_SEARCH","CHANGE_START_DATE","CHANGE_END_DATE","CLEAR_DATES","SHOW_CONFIRM","SHOW_VISIBLE_CONTENT","CLEAR_RENTAL","httpReducer","state","action","type","data","status","error","responseData","startWithPending","useReducer","httpState","requestConfig","a","applyData","headers","res","Error","errors","message","LoadingSpinner","spinner","BreakpointContext","breakpoint","BreakpointContextProvider","window","innerWidth","setBreakpoint","mediaQuery","matchMedia","handleQueryListener","event","matches","addEventListener","passive","removeEventListener","HeartIcon","xmlns","viewBox","fill","fillRule","d","clipRule","SearchIcon","PencilIcon","stroke","strokeLinecap","strokeLinejoin","strokeWidth","useIntersectionObserver","root","rootMargin","threshold","isIntersecting","setIsIntersecting","node","setNode","observer","useRef","current","IntersectionObserver","entry","currentObserver","observe","disconnect","RequireAuth","isLoading","setIsLoading","useContext","timer","setTimeout","clearTimeout","replace","UserIcon","NavigationBar","forwardRef","navigationRef","authenticated","btnIsClicked","setBtnIsClicked","bumpTimer","btnClasses","item","bump","ref","hide","show","end","navData","isActive","active","style","position","heart","Footer","footer","NavigationLayout","location","useLocation","options","useMemo","pathname","Home","lazy","Favorites","Auth","Profile","Results","Advertisement","UserDetails","Rentals","NewAdvertisement","AdvertisementAdministration","WebsiteAdministration","App","element","path","AxiosMiddleware","authCtx","interceptors","response","use","includes","tokenData","config","request","Promise","reject","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a2507f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-bar\":\"NavigationBar_nav-bar__3bf-W\",\"show\":\"NavigationBar_show__1SFtW\",\"hide\":\"NavigationBar_hide__1B_f_\",\"item\":\"NavigationBar_item__1ui1f\",\"heart\":\"NavigationBar_heart__KX-_u\",\"user-favorites-counter\":\"NavigationBar_user-favorites-counter__WeCZT\",\"active\":\"NavigationBar_active__1yTZ1\",\"bump\":\"NavigationBar_bump__2aal9\"};","import {initStore} from \"./store\";\n\nconst configureStore = fetchedFavorites => {\n    const actions = {\n        TOGGLE_FAV: (curState, favoriteAdv) => {\n            const advIsFavorite = curState.userFavorites.some(userFavAdv => userFavAdv._id === favoriteAdv._id)\n            if (advIsFavorite) {\n                return {userFavorites: curState.userFavorites.filter(userFavAdv => userFavAdv._id !== favoriteAdv._id)}\n            }\n            return {userFavorites: curState.userFavorites.concat(favoriteAdv)};\n        }\n    }\n    initStore(actions, {\n        userFavorites: fetchedFavorites || []\n    })\n}\n\nexport default configureStore;\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport {body_favorites, body_refresh, invalidate} from \"../helpers/httpConfig\"\nimport useHttp from \"../hooks/use-http\";\nimport favoritesConfigureStore from \"../hooks-store/favorites-store\";\n\nconst AuthContext = React.createContext({\n    token: '',\n    isLoggedIn: false,\n    login: (token) => {},\n    logout: () => {}\n});\n\nexport const AuthContextProvider = props => {\n\n    const [token, setToken] = useState('')\n    const {sendRequest} = useHttp()\n\n    const userIsLoggedIn = !!token;\n\n    const getUserFavoritesHandler = useCallback((token) => {\n        sendRequest({body: body_favorites, token}, resData => {\n            favoritesConfigureStore(resData.favorites.map(\n                favorite => { return {...favorite, advIsFavorite: true} }\n            ))\n        })\n    }, [sendRequest])\n\n    const loginHandler = useCallback((token) => {\n        setToken(token)\n        getUserFavoritesHandler(token)\n    }, [getUserFavoritesHandler])\n\n    const logoutHandler = useCallback(() => {\n        setToken(null)\n        sendRequest({body: invalidate, token}, () => favoritesConfigureStore())\n    }, [sendRequest, token]);\n\n    useEffect(() => {\n        const transformData = resData => {\n            const authData = resData.refreshToken\n            setToken(authData[\"token\"])\n            getUserFavoritesHandler(authData[\"token\"])\n        }\n\n        sendRequest({body: body_refresh}, transformData)\n    }, [sendRequest, getUserFavoritesHandler]);\n\n    const contextValue = {\n        token: token,\n        isLoggedIn: userIsLoggedIn,\n        login: loginHandler,\n        logout: logoutHandler\n    }\n\n    return <AuthContext.Provider value={contextValue}>\n        {props.children}\n    </AuthContext.Provider>\n}\n\nexport default AuthContext;\n","exports.body_login = ({enteredEmail, enteredPassword}) => {\n    return {\n        query: `\n            mutation($userData: UserInput!) {\n                login(inputUser: $userData) {\n                    authData {\n                        userId\n                        token\n                    }\n                    authProblem\n                }\n            }\n        `,\n        variables: {userData: {email: enteredEmail, password: enteredPassword}}\n    }\n};\nexports.body_signup = ({enteredEmail, enteredPassword}) => {\n    return {\n        query: `\n            mutation($userData: UserInput!) {\n                createUser(inputUser: $userData) {\n                    authData {\n                        userId\n                        token\n                    }\n                    authProblem\n                }  \n            }\n        `,\n        variables: {userData: {email: enteredEmail, password: enteredPassword}}\n    }\n};\nexports.body_changePassword = ({oldPassword, newPassword}) => {\n    return {\n        query: `\n            mutation($passwordData: ChangePasswordInput!) {\n                changePassword(inputChangePassword: $passwordData) {\n                    changePasswordData {\n                        email\n                        avatar\n                        createdAt\n                        address {\n                            street\n                            city\n                            region   \n                            postalCode\n                        }\n                    }\n                    changePasswordProblem\n                }  \n            }\n        `,\n        variables: {passwordData: {oldPassword, newPassword}}\n    }\n};\nexports.body_updateUser = ({street, city, region, postalCode}) => {\n    return {\n        query: `\n            mutation($userData: UpdateUserInput!) {\n                updateUser(inputUpdateUser: $userData) {\n                    updateUserData {\n                        email\n                        avatar\n                        createdAt\n                        address {\n                            street\n                            city\n                            region\n                            postalCode\n                        }\n                    }\n                    updateUserProblem\n                }  \n            }\n        `,\n        variables: {userData: {street, city, region, postalCode}}\n    }\n};\nexports.body_search = (contains) => {\n    return {\n        query: `\n            query($filter: LocationFilter!) {\n                listAllLocations(filter: $filter) {\n                    region\n                    city\n                }\n            }\n        `,\n        variables: {filter: {contains}}\n    }\n};\nexports.body_advertisements = ({city, region, from, to, minCapacity, boatTypes, minPrice, maxPrice, skip, take}) => {\n    return {\n        query: `\n            query($filter: BoatFilter! $skip: Int $take: Int) {\n                advertisements(filter: $filter, skip: $skip, take: $take) {\n                    _id\n                    model\n                    totalCount\n                    maximumCapacity\n                    minPrice\n                    maxPrice\n                    hasAdvertisement {\n                        description\n                        images\n                        dailyFee\n                    }\n                    reviews {\n                        rating\n                    }\n                }\n            }\n        `,\n        variables: {filter: {region, city, from, to, minCapacity, boatTypes, minPrice, maxPrice}, skip, take}\n    }\n};\nexports.body_advertisement = (boatId) => {\n    return {\n        query: `\n            query AdvertisementDetails($boatId: ID!) {\n                advertisement(boatId: $boatId) {\n                    model\n                    yard\n                    length\n                    maximumCapacity\n                    boatType\n                    owner {\n                        email\n                        avatar\n                    }\n                    hasAdvertisement {\n                        description\n                        images\n                        dailyFee\n                        fixedFee\n                    }\n                    isDocked {\n                        region\n                        city\n                        harbour\n                        coordinates \n                    }\n                    reviews {\n                        _id\n                        body\n                        rating\n                        createdAt\n                        creator {\n                            email\n                            avatar\n                        }\n                    }\n                }\n                boatRentals(boatId: $boatId) {\n                    from\n                    to\n                }\n            }        \n        `,\n        variables: boatId\n    }\n};\nexports.body_addBoat = ({yard, model, length, maximumCapacity, boatType, _id}) => {\n    return {\n        query: `\n            mutation($boatData: BoatInput!) {\n                addBoat(inputBoat: $boatData) {\n                    addBoatData {\n                        _id\n                        yard\n                        model\n                        length\n                        maximumCapacity\n                        boatType\n                        isDocked {\n                            harbour\n                            city\n                            region\n                            coordinates   \n                        }\n                    }\n                    addBoatProblem\n                }\n            }\n        `,\n        variables: {boatData: {yard, model, length, maximumCapacity, boatType, _id}}\n    }\n};\nexports.body_removeBoat = (boatId) => {\n    return {\n        query: `\n            mutation($boatId: ID!) {\n                removeBoat(boatId: $boatId) {\n                    removedBoatId\n                    removeBoatProblem\n                }\n            }\n        `,\n        variables: boatId\n    }\n};\nexports.body_insertBoatLocation = ({boatId, harbour, city, region, latitude, longitude}) => {\n    return {\n        query: `\n            mutation($locationData: InsertBoatLocationInput!) {\n                insertBoatLocation(inputInsertBoatLocation: $locationData) {\n                    insertBoatLocationData {\n                        _id\n                        yard\n                        model\n                        length\n                        maximumCapacity\n                        boatType\n                        isDocked {\n                            region\n                            city\n                            harbour\n                            coordinates \n                        }\n                    }\n                    insertBoatLocationProblem\n                }\n            }\n        `,\n        variables: {locationData: {boatId, isDocked: {harbour, city, region, latitude, longitude}}}\n    }\n};\nexports.body_publishAdvertisement = ({boatId, description, dailyFee, fixedFee}) => {\n    return {\n        query: `\n            mutation($advertisementData: PublishAdvertisementInput!) {\n                publishAdvertisement(inputPublishAdvertisement: $advertisementData) {\n                    publishAdvertisementData {\n                        _id\n                    }\n                    publishAdvertisementProblem\n                }\n            }\n        `,\n        variables: {advertisementData: {boatId, publishAdvertisement: {description, dailyFee, fixedFee}}}\n    }\n};\nexports.body_rentBoat = ({boatId, from, to}) => {\n    return {\n        query: `\n            mutation($rentalData: RentBoatInput!) {\n                rentBoat(inputRentBoat: $rentalData) {\n                    rentBoatData {\n                        billNumber\n                        from\n                        to\n                        dailyFee\n                        fixedFee\n                        createdAt\n                        customer {\n                            email\n                        }\n                        boat {\n                            model\n                            yard\n                            owner {\n                                email\n                            }\n                            isDocked {\n                                region\n                                city\n                                harbour\n                                coordinates\n                            }\n                        }\n                    }\n                    rentBoatProblem\n                }\n            }\n        `,\n        variables: {rentalData: {boatId, from, to}}\n    }\n};\nexports.body_updateRental = ({rentalId, from, to}) => {\n    return {\n        query: `\n            mutation($rentalData: UpdateRentalInput!) {\n                updateRental(inputUpdateRental: $rentalData) {\n                    updateRentalData {\n                        _id\n                        billNumber\n                        from\n                        to\n                        dailyFee\n                        fixedFee\n                        createdAt\n                        customer {\n                            _id\n                            email\n                        }\n                        boat {\n                            _id\n                            yard\n                            model\n                            length\n                            maximumCapacity\n                            boatType\n                            owner {\n                                email\n                            }\n                            hasAdvertisement {\n                                description\n                                images\n                                dailyFee\n                                fixedFee\n                            }\n                            isDocked {\n                                region\n                                city\n                                harbour\n                            }\n                            reviews {\n                                _id\n                                body\n                                rating\n                                rental\n                                createdAt\n                                creator {\n                                    _id\n                                    email\n                                    avatar\n                                }\n                            }\n                        }\n                    }\n                    updateRentalProblem\n                }\n            }\n        `,\n        variables: {rentalData: {rentalId, from, to}}\n    }\n};\nexports.body_backdateRental = ({rentalId, from, to}) => {\n    return {\n        query: `\n            mutation($rentalData: UpdateRentalInput!) {\n                backdateRental(inputUpdateRental: $rentalData) {\n                    backdateRentalData {\n                        _id\n                        from\n                        to\n                        boat {\n                            _id\n                            isDocked {\n                                city\n                            }\n                        }\n                        customer {\n                            email\n                        }\n                    }\n                    backdateRentalProblem\n                }\n            }\n        `,\n        variables: {rentalData: {rentalId, from, to}}\n    }\n};\nexports.body_recordBoatReturn = (rentalId) => {\n    return {\n        query: `\n            mutation($rentalId: ID!) {\n                recordBoatReturn(rentalId: $rentalId) {\n                    recordBoatReturnData {\n                        _id\n                        from\n                        to\n                        dailyFee\n                        fixedFee\n                        billNumber\n                        createdAt\n                        redelivery\n                        boat {\n                            _id\n                            model\n                            yard\n                            owner {\n                                email\n                            }\n                            isDocked {\n                                city\n                                region\n                                harbour\n                            }\n                            reviews {\n                                rating\n                                rental\n                                creator {\n                                    _id\n                                }\n                            }\n                        }\n                        customer {\n                            _id\n                            email\n                        }\n                    }\n                    recordBoatReturnProblem\n                }\n            }\n        `,\n        variables: rentalId\n    }\n};\nexports.body_boatRentals = (boatId) => {\n    return {\n        query: `\n            query($boatId: ID!) {\n                boatRentals(boatId: $boatId) {\n                    from\n                    to\n                }\n            }\n        `,\n        variables: boatId\n    }\n};\nexports.body_deleteRental = (rentalId) => {\n    return {\n        query: `\n            mutation($rentalId: ID!) {\n                deleteRental(rentalId: $rentalId) {\n                    deletedRentalId\n                    deleteRentalProblem\n                }\n            }\n        `,\n        variables: rentalId\n    }\n};\nexports.body_publishReview = ({rentalId, body, rating}) => {\n    return {\n        query: `\n            mutation($reviewData: ReviewInput!) {\n                publishReview(inputReview: $reviewData) {\n                    publishReviewData {\n                        body\n                        rating\n                        rental\n                        createdAt\n                        creator {\n                            _id\n                        }\n                    }\n                    publishReviewProblem\n                }\n            }\n        `,\n        variables: {reviewData: {rentalId, body, rating}}\n    }\n};\nexports.body_shipownerAdvertisements = {\n    query: `\n        query shipownerAdvertisements {\n            advertisementsByShipowner {\n                _id\n                yard\n                model\n                hasAdvertisement {\n                    images\n                    createdAt\n                    preferredBy {\n                        _id\n                    }\n                }\n                isDocked {\n                    region\n                    city\n                    harbour\n                }\n                reviews {\n                    _id\n                    rating\n                }\n            }\n            rentalsByShipowner {\n                _id\n                from\n                to\n                redelivery\n                dailyFee\n                fixedFee\n                billNumber\n                createdAt\n                boat {\n                    _id\n                    model\n                    yard\n                    owner {\n                        email\n                    }\n                    isDocked {\n                        city\n                        region\n                        harbour\n                    }\n                    reviews {\n                        rating\n                        rental\n                        creator {\n                            _id\n                        }\n                    }\n                }\n                customer {\n                    _id\n                    email\n                }\n            }\n        }\n    `\n};\nexports.body_withdrawAdvertisement = (boatId) => {\n    return {\n        query: `\n            mutation($boatId: ID!) {\n                withdrawAdvertisement(boatId: $boatId) {\n                    withdrawnAdvertisementId\n                    withdrawAdvertisementProblem\n                }\n            }\n        `,\n        variables: boatId\n    }\n}\nexports.body_favorites = {\n    query: `\n        query {\n            favorites {\n                _id\n                model\n                maximumCapacity\n                hasAdvertisement {\n                    images\n                    description\n                    dailyFee\n                }\n                reviews {\n                    rating\n                }\n            }  \n        }\n    `,\n};\nexports.body_addFavorite = (boatId) => {\n    return {\n        query: `\n            mutation($boatId: ID!) {\n                addFavorite(boatId: $boatId) {\n                    favoritesData {\n                        _id\n                        model\n                        maximumCapacity\n                        hasAdvertisement {\n                            images\n                            description\n                            dailyFee\n                        }\n                        reviews {\n                            rating\n                        }\n                    }\n                    favoritesProblem\n                }\n            }\n        `,\n        variables: boatId\n    }\n};\nexports.body_removeFavorite = (boatId) => {\n    return {\n        query: `\n            mutation($boatId: ID!) {\n                removeFavorite(boatId: $boatId) {\n                    favoritesData {\n                        _id\n                        model\n                        maximumCapacity\n                        hasAdvertisement {\n                            images\n                            description\n                            dailyFee\n                        }\n                        reviews {\n                            rating\n                        }\n                    }\n                    favoritesProblem\n                }\n            }\n        `,\n        variables: boatId\n    }\n};\nexports.body_refresh = {\n    query: `\n        query {\n            refreshToken {\n                userId\n                token\n            }  \n        }\n    `,\n};\nexports.invalidate = {\n    query: `\n        mutation {\n            invalidateTokens\n        }\n    `,\n};\nexports.body_user = {\n    query: `\n        query {\n            user {\n                email\n                avatar\n                userType\n                createdAt\n                address {\n                    street\n                    city\n                    region\n                    postalCode\n                }\n            }\n        }\n    `,\n};\nexports.body_deleteUser = {\n    query: `\n        mutation {\n            deleteUser {\n                deletedUserId\n                deleteUserProblem\n            }\n        }\n    `\n};\nexports.body_userBoats = {\n    query: `\n        query BoatDetails {\n            boatsByUser {\n                _id\n                yard\n                model\n                length\n                maximumCapacity\n                boatType\n                isDocked {\n                    harbour\n                    city\n                    region\n                    coordinates\n                }\n            }\n            user {\n                email\n            }\n            rentalsByShipowner {\n                from\n                to\n                boat {\n                    _id\n                }\n            }\n        }\n    `\n};\nexports.body_rentals = {\n    query: `\n        query {\n            rentals {\n                _id\n                from\n                to\n                boat {\n                    _id\n                    isDocked {\n                        city\n                    }\n                }\n                customer {\n                    email\n                }\n            }\n        }\n    `\n};\nexports.body_userRentals = {\n    query: `\n        query {\n            rentalsByUser {\n                _id\n                billNumber\n                from\n                to\n                redelivery\n                dailyFee\n                fixedFee\n                createdAt\n                customer {\n                    _id\n                    email\n                }\n                boat {\n                    _id\n                    model\n                    yard\n                    owner {\n                        email\n                    }\n                    hasAdvertisement {\n                        images\n                        description\n                        dailyFee\n                        fixedFee\n                    }\n                    isDocked {\n                        region\n                        city\n                        harbour\n                    }\n                    reviews {\n                        creator {\n                            _id\n                        }\n                        createdAt\n                        body\n                        rating\n                        rental\n                    }\n                }\n            }\n        }\n    `\n};\nexports.body_addAvatar = {\n    operations: `{ \"query\": \"mutation ($file: Upload!) { addAvatar(upload: $file) { addAvatarData { email avatar createdAt address { street city region postalCode } } addAvatarProblem }  }\", \"variables\": { \"file\": null } }`,\n    map: `{\"0\": [\"variables.file\"]}`,\n};\nexports.body_addBoatImages = {\n    operations: (boatId) => `{ \"query\": \"mutation ($boatId: ID!, $files: [Upload!]!) { addBoatImages(boatId: $boatId, files: $files) { addBoatImagesData { _id } addBoatImagesProblem }  }\", \"variables\": { \"boatId\": \"${boatId}\", \"files\": [null, null, null] } }`,\n    map: `{\"0\": [\"variables.files.0\"], \"1\": [\"variables.files.1\"], \"2\": [\"variables.files.2\"]}`,\n};\n","import axios from \"axios\";\nimport {GRAPHQL_API_URL} from \"../helpers/Utils/constants\";\n\nconst http = axios.create({\n    method: \"post\",\n    withCredentials: true,\n    baseURL: GRAPHQL_API_URL\n});\n\nexport default http;\n\n","import {useState, useEffect} from \"react\";\n\n// we share globalState between all components that import this file.\nlet globalState = {};\n// array full of setState which i call to update all components that are using my hook\nlet listeners = [];\nlet actions = {};\n\n\nexport const useStore = (shouldListen = true) => {\n    // we need this for render our components when something in our state changes.\n    const setState = useState(globalState)[1]\n\n    // (use identifier of action to reach action)\n    // like reducer function we check action and return a state, like reducer\n    const dispatch = (actionIdentifier, payload) => {\n        const newState = actions[actionIdentifier](globalState, payload)\n        // global state is an object with old data, plus new data\n        globalState = {...globalState, ...newState}\n\n        // inform all listeners about state update using useState\n        for (const listener of listeners) {\n            listener(globalState)\n        }\n    }\n\n    useEffect(() => {\n        // every component that uses my hook, will get its own setState, which is added\n        // to shared listeners array\n        if (shouldListen) {\n            listeners.push(setState);\n        }\n\n        // remove the listener when the component unmount\n        return () => {\n            if (shouldListen) {\n                listeners = listeners.filter(li => li !== setState)\n            }\n        }\n    }, [setState, shouldListen])\n\n    return [globalState, dispatch]\n};\n\nexport const initStore = (userActions, initialState) => {\n    if (initialState) {\n        globalState = {...globalState, ...initialState}\n    }\n    actions = {...actions, ...userActions}\n}\n","import React from \"react\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\nimport classes from \"./Fallback.module.css\"\n\nconst Fallback = () => {\n    return (\n        <div className={classes.fallback}>\n            <LoadingSpinner/>\n        </div>\n    )\n}\n\nexport default React.memo(Fallback)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2-3iP\",\"lds-dual-ring\":\"LoadingSpinner_lds-dual-ring__kGMMn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1wbuT\",\"grid-footer\":\"Footer_grid-footer__1Ou9F\"};","export const GRAPHQL_API_URL = \"http://192.168.178.38:3010/api\"\nexport const IMAGE_PATH = \"http://192.168.178.38:3010\"\nexport const NOMINATIM_BASE_URL = 'https://nominatim.openstreetmap.org/search?format=json&'\nexport const DEFAULT_BOAT_IMAGE = `${IMAGE_PATH}/public/images/default-boat.png`\nexport const DEFAULT_AVATAR = `${IMAGE_PATH}/public/images/default.jpg`\n\n/* Constants filterReducer */\nexport const MANAGE_BOATS = \"MANAGE_BOATS\"\nexport const ADD_GUEST = \"ADD_GUEST\"\nexport const REMOVE_GUEST = \"REMOVE_GUEST\"\nexport const INITIAL_PRICE = \"INITIAL_PRICE\"\nexport const MANAGE_MIN_PRICE = \"MANAGE_MIN_PRICE\"\nexport const MANAGE_MAX_PRICE = \"MANAGE_MAX_PRICE\"\nexport const CLEAR_FORM = \"CLEAR_FORM\"\nexport const NUMBER_BOAT_TYPES = 4\nexport const SWITCH_SEARCH = \"SWITCH_SEARCH\"\nexport const CHANGE_START_DATE = \"CHANGE_START_DATE\"\nexport const CHANGE_END_DATE = \"CHANGE_END_DATE\"\nexport const CLEAR_DATES = \"CLEAR_DATES\"\n\n/* Constants advertisementReducer */\nexport const SHOW_CONFIRM = \"SHOW_CONFIRM\"\nexport const SHOW_VISIBLE_CONTENT = \"SHOW_VISIBLE_CONTENT\"\nexport const CLEAR_RENTAL = \"CLEAR_RENTAL\"\n\n\n","import {useReducer, useCallback} from \"react\";\nimport http from \"../middleware/axiosConfig\";\n\nconst httpReducer = (state, action) => {\n    if (action.type === \"SEND\") {\n        return { data: null, status: 'pending', error: null} }\n    if (action.type === \"SUCCESS\") {\n        return { data: action.responseData, status: 'completed', error: null} }\n    if (action.type === \"ERROR\") {\n        return { data: null, status: 'completed', error: action.error} }\n    return state;\n}\n\nconst useHttp = (startWithPending = false) => {\n    const [httpState, dispatch] = useReducer(httpReducer, {\n        status: startWithPending ? 'pending' : null, data: null, error: null });\n\n    const sendRequest = useCallback(async (requestConfig, applyData = () => {}) => {\n        dispatch({type: \"SEND\"})\n        try {\n            const res = await http({\n                data: requestConfig.body,\n                headers: { 'Authorization': `Bearer ${requestConfig.token}` },\n            })\n            const resData = await res.data.data\n\n            if (res.status !== 200 && res.status !== 201) {\n                throw new Error(resData.errors[0].message);\n            }\n\n            dispatch({ type: 'SUCCESS', responseData: applyData(resData) });\n        } catch (err) {\n            dispatch({ type: \"ERROR\", error: err.message || 'Something went wrong!'});\n        }\n    }, []);\n\n    return {\n        sendRequest,\n        ...httpState\n    }\n}\n\nexport default useHttp;\n","import React from \"react\";\nimport classes from \"./LoadingSpinner.module.css\"\n\nconst LoadingSpinner = () => {\n    return (\n        <div className={classes.spinner}>\n            <div className={classes[\"lds-dual-ring\"]}/>\n        </div>\n    )\n}\n\nexport default LoadingSpinner;\n","import {createContext, useEffect, useState} from \"react\";\n\nconst BreakpointContext = createContext({\n    breakpoint: '',\n})\n\nexport const BreakpointContextProvider = ({children}) => {\n    const [breakpoint, setBreakpoint] = useState(window.innerWidth > 768 ? \"desktop\" : \"smartphone\")\n\n    useEffect(() => {\n        let mediaQuery = window.matchMedia(\"(min-width: 769px)\");\n\n        const handleQueryListener = event => {\n            if (event.matches) { setBreakpoint(\"desktop\") }\n            else { setBreakpoint(\"smartphone\") }\n        }\n\n        mediaQuery.addEventListener('change', handleQueryListener, { passive: true })\n        return () => mediaQuery.removeEventListener('change', handleQueryListener);\n    }, [])\n\n\n    const contextValue = {\n        breakpoint\n    }\n\n    return (\n        <BreakpointContext.Provider value={contextValue}>\n            {children}\n        </BreakpointContext.Provider>\n    )\n}\n\nexport default BreakpointContext\n","import React from \"react\";\n\nconst HeartIcon = props => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={`${props.className} h-5 w-5`}\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\">\n            <path fillRule=\"evenodd\"\n                  d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\n                  clipRule=\"evenodd\"/>\n        </svg>\n    );\n};\n\nexport default React.memo(HeartIcon);\n","import React from \"react\";\n\nconst SearchIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\n             className=\"h-5 w-5\"\n             viewBox=\"0 0 20 20\"\n             fill=\"currentColor\">\n            <path fillRule=\"evenodd\"\n                  d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                  clipRule=\"evenodd\"\n            />\n        </svg>\n    );\n};\n\nexport default React.memo(SearchIcon);\n","const PencilIcon = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n        >\n            <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={1.2}\n                d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n            />\n        </svg>\n    );\n};\n\nexport default PencilIcon;\n","import {useEffect, useRef, useState} from \"react\";\n\nconst useIntersectionObserver = ({root = null, rootMargin, threshold = 0}) => {\n    const [isIntersecting, setIsIntersecting] = useState(false)\n    const [node, setNode] = useState(null)\n\n    const observer = useRef(null)\n\n    useEffect(() => {\n        observer.current = new IntersectionObserver(\n            ([entry]) => setIsIntersecting(entry.isIntersecting),\n            { root, rootMargin, threshold }\n        )\n        const currentObserver = observer.current\n        \n        if (node) currentObserver.observe(node);\n        return () => currentObserver.disconnect();\n        \n    }, [node, root, rootMargin, threshold])\n\n    return [setNode, isIntersecting]\n}\n\nexport default useIntersectionObserver;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fallback\":\"Fallback_fallback__1V5yV\"};","import {useContext, useEffect, useRef, useState} from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport {Navigate} from \"react-router-dom\";\nimport Fallback from \"../UI/Fallback/Fallback\";\n\nconst RequireAuth = ({children}) => {\n    const [isLoading, setIsLoading] = useState(true)\n    const {isLoggedIn} = useContext(AuthContext)\n    const timer = useRef(null)\n\n    useEffect(() => {\n        timer.current = setTimeout(\n            () => setIsLoading(false),\n            500\n        )\n        return () => clearTimeout(timer.current)\n    }, [])\n\n    if (isLoggedIn) return children\n    return (\n        isLoading ?\n            <Fallback/> :\n            isLoggedIn ?\n                children :\n                <Navigate to=\"/auth\" replace/>\n    )\n}\n\nexport default RequireAuth;\n","import React from \"react\";\n\nconst UserIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\n             className=\"h-6 w-6\"\n             fill=\"none\"\n             viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={1.4} d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n        </svg>\n    );\n};\n\nexport default React.memo(UserIcon);\n","import React, {forwardRef, useEffect, useState} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport classes from './NavigationBar.module.css';\nimport SearchIcon from \"../icons/MenuIcons/SearchIcon\";\nimport HeartIcon from \"../icons/MenuIcons/HeartIcon\";\nimport UserIcon from \"../icons/MenuIcons/UserIcon\";\nimport {useStore} from \"../../../hooks-store/store\";\n\nconst NavigationBar = forwardRef(({authenticated, isIntersecting}, navigationRef) => {\n    const [btnIsClicked, setBtnIsClicked] = useState(false)\n    const { userFavorites } = useStore()[0];\n\n    useEffect(() => {\n        if (!userFavorites || userFavorites.length === 0) return;\n\n        setBtnIsClicked(true);\n        const bumpTimer = setTimeout(() => setBtnIsClicked(false), 300)\n\n        return () => clearTimeout(bumpTimer);\n    }, [userFavorites])\n\n    const btnClasses = `${classes.item} ${btnIsClicked ? classes.bump : \"\"}`\n\n    return (\n        <nav ref={navigationRef}>\n            <ul className={isIntersecting ? `${classes['nav-bar']} ${classes.hide}` : `${classes['nav-bar']} ${classes.show}`}>\n                <li>\n                    <NavLink to='/' end className={navData => navData.isActive ? `${classes.active} ${classes.item}` : `${classes.item}`}>\n                        <SearchIcon/>\n                        <div>Esplora</div>\n                    </NavLink>\n                </li>\n                <li>\n                    <NavLink style={{position: \"relative\"}} to='favorites' className={navData => navData.isActive ? `${btnClasses} ${classes.active}` : `${btnClasses}`}>\n                        <HeartIcon className={classes.heart}/>\n                        {userFavorites && userFavorites.length > 0 && <div className={classes[\"user-favorites-counter\"]}>{userFavorites.length}</div>}\n                        <div>Preferiti</div>\n                    </NavLink>\n                </li>\n                <li>\n                    <NavLink to='profile' className={navData => navData.isActive ? `${classes.active} ${classes.item}` : `${classes.item}`}>\n                        <UserIcon/>\n                        {authenticated ? <div>Account</div> : <div>Accedi</div>}\n                    </NavLink>\n                </li>\n            </ul>\n        </nav>\n    );\n});\n\nexport default React.memo(NavigationBar);\n","import React from \"react\";\nimport classes from \"./Footer.module.css\";\nimport PencilIcon from \"../icons/PencilIcon\";\n\nconst Footer = React.forwardRef((props, ref) => {\n    return (\n            <div className={classes.footer} ref={ref}>\n                <PencilIcon/>\n                <div className={classes['grid-footer']}>\n                    <div>Arcara Alessio</div>\n                    <div>Carchesio Michael</div>\n                    <div>Crimaldi Alessia</div>\n                </div>\n            </div>\n    );\n});\n\nexport default React.memo(Footer);\n","import {Outlet, useLocation} from \"react-router-dom\";\nimport NavigationBar from \"../../Navigation/NavigationBar\";\nimport Footer from \"../../Footer/Footer\";\nimport useIntersectionObserver from \"../../../../hooks/use-intersection-observer\";\nimport {useMemo, useRef} from \"react\";\n\nconst NavigationLayout = ({authenticated}) => {\n    const navigationRef = useRef()\n    const location = useLocation()\n\n    const options = useMemo(() => {\n        return {\n            root: navigationRef.current\n        }\n    }, [navigationRef])\n\n    const [ref, isIntersecting] = useIntersectionObserver(options)\n\n    return (\n        <>\n            <Outlet/>\n            <NavigationBar isIntersecting={isIntersecting} ref={navigationRef} authenticated={authenticated}/>\n            {location.pathname === \"/\" && <Footer ref={ref} />}\n        </>\n    )\n};\n\nexport default NavigationLayout\n","import React, {useContext, Suspense} from \"react\";\nimport AuthContext from \"./store/auth-context\";\nimport {Routes, Route, Navigate} from \"react-router-dom\";\nimport RequireAuth from \"./components/RequireAuth/RequireAuth\";\nimport NavigationLayout from \"./components/UI/Layout/NavigationLayout/NavigationLayout\";\nimport Fallback from \"./components/UI/Fallback/Fallback\";\n\nconst Home = React.lazy(() => import('./pages/Home'));\nconst Favorites = React.lazy(() => import('./pages/FavoritesPage'));\nconst Auth = React.lazy(() => import('./pages/AuthPage'));\nconst Profile = React.lazy(() => import('./pages/ProfilePage'));\nconst Results = React.lazy(() => import('./pages/ResultsPage'));\nconst Advertisement = React.lazy(() => import('./pages/AdvertisementPage'));\nconst UserDetails = React.lazy(() => import('./pages/UserDetailsPage'));\nconst Rentals = React.lazy(() => import('./pages/RentalsPage'));\nconst NewAdvertisement = React.lazy(() => import('./pages/NewAdvertisementPage'));\nconst AdvertisementAdministration = React.lazy(() => import('./pages/AdvertisementAdministrationPage'));\nconst WebsiteAdministration = React.lazy(() => import('./pages/WebsiteAdministrationPage'));\n\nfunction App() {\n    const {isLoggedIn} = useContext(AuthContext)\n\n    return (\n        <Suspense fallback={<Fallback/>}>\n            <Routes>\n                <Route element={<NavigationLayout authenticated={isLoggedIn}/>}>\n                    <Route path='/' element={<Home/>}/>\n                    {!isLoggedIn && <Route path='auth' element={<Auth/>}/>}\n                    <Route path='favorites' element={<RequireAuth><Favorites/></RequireAuth>}/>\n                    <Route path='profile' element={<RequireAuth><Profile/></RequireAuth>}/>\n                </Route>\n                <Route path='boats/*' element={<Results/>}/>\n                <Route path='boats/:boatId' element={<Advertisement/>}/>\n                <Route path='profile/user-info' element={<RequireAuth><UserDetails/></RequireAuth>}/>\n                <Route path='profile/rentals/*' element={<RequireAuth><Rentals/></RequireAuth>}/>\n                <Route path='become-shipowner/*' element={<RequireAuth><NewAdvertisement/></RequireAuth>}/>\n                <Route path='profile/your-advertisements' element={<RequireAuth><AdvertisementAdministration/></RequireAuth>}/>\n                <Route path='administration' element={<RequireAuth><WebsiteAdministration/></RequireAuth>}/>\n                <Route path='*' element={<Navigate replace to=\"/\"/>}/>\n            </Routes>\n        </Suspense>\n    )\n}\n\nexport default App\n","import {useContext, useMemo} from \"react\";\nimport AuthContext from \"../store/auth-context\";\nimport axios from \"axios\";\nimport {body_refresh} from \"../helpers/httpConfig\"\nimport http from \"./axiosConfig\"\n\nconst AxiosMiddleware = ({children}) => {\n\n    const authCtx = useContext(AuthContext)\n\n    useMemo(() => {\n        http.interceptors.response.use(\n            async res => res,\n            async error => {\n                try {\n                    const errorMessage = await error.response.data.errors[0].message;\n\n                    if (errorMessage.includes('Unauthenticated')) {\n                        try {\n                            const res = await http({data: body_refresh})\n                            const resData = res.data.data.refreshToken;\n\n                            const tokenData = resData.token;\n                            authCtx.login(tokenData)\n\n                            const config = error.config;\n                            config.headers['Authorization'] = \"Bearer \" + tokenData\n                            return axios.request(config)\n                        } catch (err) {\n                            authCtx.logout()\n                            throw new Error(\"'Invalid or expired refresh token.'\")\n                        }\n                    }\n                    return Promise.reject(error)\n                } catch (err) { throw new Error(\"Il server non risponde. \")}\n            })\n    }, [authCtx])\n\n    return children\n}\n\nexport default AxiosMiddleware\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {AuthContextProvider} from \"./store/auth-context\";\nimport {BreakpointContextProvider} from \"./store/breakpoint-context\";\nimport AxiosMiddleware from \"./middleware/axiosMiddleware\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <BreakpointContextProvider>\n            <AuthContextProvider>\n                <AxiosMiddleware>\n                    <App/>\n                </AxiosMiddleware>\n            </AuthContextProvider>\n        </BreakpointContextProvider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}